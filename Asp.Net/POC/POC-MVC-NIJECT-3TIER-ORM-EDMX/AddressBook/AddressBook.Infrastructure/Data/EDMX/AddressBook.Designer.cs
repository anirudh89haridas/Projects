//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AddressBookModel", "FK_StateMaster_CountryMaster", "CountryMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AddressBook.Infrastructure.Data.EDMX.CountryMaster), "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AddressBook.Infrastructure.Data.EDMX.StateMaster), true)]
[assembly: EdmRelationshipAttribute("AddressBookModel", "FK_HobbyAddress_HobbyMaster", "HobbyMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AddressBook.Infrastructure.Data.EDMX.HobbyMaster), "HobbyAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AddressBook.Infrastructure.Data.EDMX.HobbyAddress), true)]
[assembly: EdmRelationshipAttribute("AddressBookModel", "FK_HobbyAddress_PersonAddress", "PersonAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AddressBook.Infrastructure.Data.EDMX.PersonAddress), "HobbyAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AddressBook.Infrastructure.Data.EDMX.HobbyAddress), true)]
[assembly: EdmRelationshipAttribute("AddressBookModel", "FK_LanguageAddress_LanguageMaster", "LanguageMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AddressBook.Infrastructure.Data.EDMX.LanguageMaster), "LanguageAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AddressBook.Infrastructure.Data.EDMX.LanguageAddress), true)]
[assembly: EdmRelationshipAttribute("AddressBookModel", "FK_LanguageAddress_PersonAddress", "PersonAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AddressBook.Infrastructure.Data.EDMX.PersonAddress), "LanguageAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AddressBook.Infrastructure.Data.EDMX.LanguageAddress), true)]
[assembly: EdmRelationshipAttribute("AddressBookModel", "FK_Permission_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AddressBook.Infrastructure.Data.EDMX.Person), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AddressBook.Infrastructure.Data.EDMX.Permission), true)]
[assembly: EdmRelationshipAttribute("AddressBookModel", "FK_Permission_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AddressBook.Infrastructure.Data.EDMX.Role), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AddressBook.Infrastructure.Data.EDMX.Permission), true)]
[assembly: EdmRelationshipAttribute("AddressBookModel", "FK_Person_PersonAddress", "PersonAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AddressBook.Infrastructure.Data.EDMX.PersonAddress), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AddressBook.Infrastructure.Data.EDMX.Person), true)]
[assembly: EdmRelationshipAttribute("AddressBookModel", "FK_Address_StateMaster1", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AddressBook.Infrastructure.Data.EDMX.StateMaster), "PersonAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AddressBook.Infrastructure.Data.EDMX.PersonAddress), true)]

#endregion

namespace AddressBook.Infrastructure.Data.EDMX
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AddressBookEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AddressBookEntities object using the connection string found in the 'AddressBookEntities' section of the application configuration file.
        /// </summary>
        public AddressBookEntities() : base("name=AddressBookEntities", "AddressBookEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AddressBookEntities object.
        /// </summary>
        public AddressBookEntities(string connectionString) : base(connectionString, "AddressBookEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AddressBookEntities object.
        /// </summary>
        public AddressBookEntities(EntityConnection connection) : base(connection, "AddressBookEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountryMaster> CountryMasters
        {
            get
            {
                if ((_CountryMasters == null))
                {
                    _CountryMasters = base.CreateObjectSet<CountryMaster>("CountryMasters");
                }
                return _CountryMasters;
            }
        }
        private ObjectSet<CountryMaster> _CountryMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HobbyAddress> HobbyAddresses
        {
            get
            {
                if ((_HobbyAddresses == null))
                {
                    _HobbyAddresses = base.CreateObjectSet<HobbyAddress>("HobbyAddresses");
                }
                return _HobbyAddresses;
            }
        }
        private ObjectSet<HobbyAddress> _HobbyAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HobbyMaster> HobbyMasters
        {
            get
            {
                if ((_HobbyMasters == null))
                {
                    _HobbyMasters = base.CreateObjectSet<HobbyMaster>("HobbyMasters");
                }
                return _HobbyMasters;
            }
        }
        private ObjectSet<HobbyMaster> _HobbyMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LanguageAddress> LanguageAddresses
        {
            get
            {
                if ((_LanguageAddresses == null))
                {
                    _LanguageAddresses = base.CreateObjectSet<LanguageAddress>("LanguageAddresses");
                }
                return _LanguageAddresses;
            }
        }
        private ObjectSet<LanguageAddress> _LanguageAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LanguageMaster> LanguageMasters
        {
            get
            {
                if ((_LanguageMasters == null))
                {
                    _LanguageMasters = base.CreateObjectSet<LanguageMaster>("LanguageMasters");
                }
                return _LanguageMasters;
            }
        }
        private ObjectSet<LanguageMaster> _LanguageMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonAddress> PersonAddresses
        {
            get
            {
                if ((_PersonAddresses == null))
                {
                    _PersonAddresses = base.CreateObjectSet<PersonAddress>("PersonAddresses");
                }
                return _PersonAddresses;
            }
        }
        private ObjectSet<PersonAddress> _PersonAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateMaster> StateMasters
        {
            get
            {
                if ((_StateMasters == null))
                {
                    _StateMasters = base.CreateObjectSet<StateMaster>("StateMasters");
                }
                return _StateMasters;
            }
        }
        private ObjectSet<StateMaster> _StateMasters;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountryMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountryMasters(CountryMaster countryMaster)
        {
            base.AddObject("CountryMasters", countryMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HobbyAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHobbyAddresses(HobbyAddress hobbyAddress)
        {
            base.AddObject("HobbyAddresses", hobbyAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HobbyMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHobbyMasters(HobbyMaster hobbyMaster)
        {
            base.AddObject("HobbyMasters", hobbyMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LanguageAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguageAddresses(LanguageAddress languageAddress)
        {
            base.AddObject("LanguageAddresses", languageAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LanguageMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguageMasters(LanguageMaster languageMaster)
        {
            base.AddObject("LanguageMasters", languageMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonAddresses(PersonAddress personAddress)
        {
            base.AddObject("PersonAddresses", personAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StateMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStateMasters(StateMaster stateMaster)
        {
            base.AddObject("StateMasters", stateMaster);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AddressBookModel", Name="CountryMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountryMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountryMaster object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static CountryMaster CreateCountryMaster(global::System.Int32 countryID, global::System.String countryName)
        {
            CountryMaster countryMaster = new CountryMaster();
            countryMaster.CountryID = countryID;
            countryMaster.CountryName = countryName;
            return countryMaster;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_StateMaster_CountryMaster", "StateMaster")]
        public EntityCollection<StateMaster> StateMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateMaster>("AddressBookModel.FK_StateMaster_CountryMaster", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateMaster>("AddressBookModel.FK_StateMaster_CountryMaster", "StateMaster", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AddressBookModel", Name="HobbyAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HobbyAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HobbyAddress object.
        /// </summary>
        /// <param name="hobbyAddressID">Initial value of the HobbyAddressID property.</param>
        /// <param name="personAddressID">Initial value of the PersonAddressID property.</param>
        /// <param name="hobbyID">Initial value of the HobbyID property.</param>
        public static HobbyAddress CreateHobbyAddress(global::System.Int32 hobbyAddressID, global::System.Int32 personAddressID, global::System.Int32 hobbyID)
        {
            HobbyAddress hobbyAddress = new HobbyAddress();
            hobbyAddress.HobbyAddressID = hobbyAddressID;
            hobbyAddress.PersonAddressID = personAddressID;
            hobbyAddress.HobbyID = hobbyID;
            return hobbyAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HobbyAddressID
        {
            get
            {
                return _HobbyAddressID;
            }
            set
            {
                if (_HobbyAddressID != value)
                {
                    OnHobbyAddressIDChanging(value);
                    ReportPropertyChanging("HobbyAddressID");
                    _HobbyAddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HobbyAddressID");
                    OnHobbyAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _HobbyAddressID;
        partial void OnHobbyAddressIDChanging(global::System.Int32 value);
        partial void OnHobbyAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonAddressID
        {
            get
            {
                return _PersonAddressID;
            }
            set
            {
                OnPersonAddressIDChanging(value);
                ReportPropertyChanging("PersonAddressID");
                _PersonAddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonAddressID");
                OnPersonAddressIDChanged();
            }
        }
        private global::System.Int32 _PersonAddressID;
        partial void OnPersonAddressIDChanging(global::System.Int32 value);
        partial void OnPersonAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HobbyID
        {
            get
            {
                return _HobbyID;
            }
            set
            {
                OnHobbyIDChanging(value);
                ReportPropertyChanging("HobbyID");
                _HobbyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HobbyID");
                OnHobbyIDChanged();
            }
        }
        private global::System.Int32 _HobbyID;
        partial void OnHobbyIDChanging(global::System.Int32 value);
        partial void OnHobbyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_HobbyAddress_HobbyMaster", "HobbyMaster")]
        public HobbyMaster HobbyMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HobbyMaster>("AddressBookModel.FK_HobbyAddress_HobbyMaster", "HobbyMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HobbyMaster>("AddressBookModel.FK_HobbyAddress_HobbyMaster", "HobbyMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HobbyMaster> HobbyMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HobbyMaster>("AddressBookModel.FK_HobbyAddress_HobbyMaster", "HobbyMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HobbyMaster>("AddressBookModel.FK_HobbyAddress_HobbyMaster", "HobbyMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_HobbyAddress_PersonAddress", "PersonAddress")]
        public PersonAddress PersonAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddress>("AddressBookModel.FK_HobbyAddress_PersonAddress", "PersonAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddress>("AddressBookModel.FK_HobbyAddress_PersonAddress", "PersonAddress").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonAddress> PersonAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddress>("AddressBookModel.FK_HobbyAddress_PersonAddress", "PersonAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonAddress>("AddressBookModel.FK_HobbyAddress_PersonAddress", "PersonAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AddressBookModel", Name="HobbyMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HobbyMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HobbyMaster object.
        /// </summary>
        /// <param name="hobbyID">Initial value of the HobbyID property.</param>
        /// <param name="hobbyName">Initial value of the HobbyName property.</param>
        public static HobbyMaster CreateHobbyMaster(global::System.Int32 hobbyID, global::System.String hobbyName)
        {
            HobbyMaster hobbyMaster = new HobbyMaster();
            hobbyMaster.HobbyID = hobbyID;
            hobbyMaster.HobbyName = hobbyName;
            return hobbyMaster;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HobbyID
        {
            get
            {
                return _HobbyID;
            }
            set
            {
                if (_HobbyID != value)
                {
                    OnHobbyIDChanging(value);
                    ReportPropertyChanging("HobbyID");
                    _HobbyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HobbyID");
                    OnHobbyIDChanged();
                }
            }
        }
        private global::System.Int32 _HobbyID;
        partial void OnHobbyIDChanging(global::System.Int32 value);
        partial void OnHobbyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HobbyName
        {
            get
            {
                return _HobbyName;
            }
            set
            {
                OnHobbyNameChanging(value);
                ReportPropertyChanging("HobbyName");
                _HobbyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HobbyName");
                OnHobbyNameChanged();
            }
        }
        private global::System.String _HobbyName;
        partial void OnHobbyNameChanging(global::System.String value);
        partial void OnHobbyNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_HobbyAddress_HobbyMaster", "HobbyAddress")]
        public EntityCollection<HobbyAddress> HobbyAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HobbyAddress>("AddressBookModel.FK_HobbyAddress_HobbyMaster", "HobbyAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HobbyAddress>("AddressBookModel.FK_HobbyAddress_HobbyMaster", "HobbyAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AddressBookModel", Name="LanguageAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LanguageAddress object.
        /// </summary>
        /// <param name="languageAddressID">Initial value of the LanguageAddressID property.</param>
        /// <param name="personAddressID">Initial value of the PersonAddressID property.</param>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        public static LanguageAddress CreateLanguageAddress(global::System.Int32 languageAddressID, global::System.Int32 personAddressID, global::System.Int32 languageID)
        {
            LanguageAddress languageAddress = new LanguageAddress();
            languageAddress.LanguageAddressID = languageAddressID;
            languageAddress.PersonAddressID = personAddressID;
            languageAddress.LanguageID = languageID;
            return languageAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageAddressID
        {
            get
            {
                return _LanguageAddressID;
            }
            set
            {
                if (_LanguageAddressID != value)
                {
                    OnLanguageAddressIDChanging(value);
                    ReportPropertyChanging("LanguageAddressID");
                    _LanguageAddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LanguageAddressID");
                    OnLanguageAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _LanguageAddressID;
        partial void OnLanguageAddressIDChanging(global::System.Int32 value);
        partial void OnLanguageAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonAddressID
        {
            get
            {
                return _PersonAddressID;
            }
            set
            {
                OnPersonAddressIDChanging(value);
                ReportPropertyChanging("PersonAddressID");
                _PersonAddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonAddressID");
                OnPersonAddressIDChanged();
            }
        }
        private global::System.Int32 _PersonAddressID;
        partial void OnPersonAddressIDChanging(global::System.Int32 value);
        partial void OnPersonAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                OnLanguageIDChanging(value);
                ReportPropertyChanging("LanguageID");
                _LanguageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageID");
                OnLanguageIDChanged();
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_LanguageAddress_LanguageMaster", "LanguageMaster")]
        public LanguageMaster LanguageMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageMaster>("AddressBookModel.FK_LanguageAddress_LanguageMaster", "LanguageMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageMaster>("AddressBookModel.FK_LanguageAddress_LanguageMaster", "LanguageMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageMaster> LanguageMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageMaster>("AddressBookModel.FK_LanguageAddress_LanguageMaster", "LanguageMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageMaster>("AddressBookModel.FK_LanguageAddress_LanguageMaster", "LanguageMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_LanguageAddress_PersonAddress", "PersonAddress")]
        public PersonAddress PersonAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddress>("AddressBookModel.FK_LanguageAddress_PersonAddress", "PersonAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddress>("AddressBookModel.FK_LanguageAddress_PersonAddress", "PersonAddress").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonAddress> PersonAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddress>("AddressBookModel.FK_LanguageAddress_PersonAddress", "PersonAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonAddress>("AddressBookModel.FK_LanguageAddress_PersonAddress", "PersonAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AddressBookModel", Name="LanguageMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LanguageMaster object.
        /// </summary>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="languageName">Initial value of the LanguageName property.</param>
        public static LanguageMaster CreateLanguageMaster(global::System.Int32 languageID, global::System.String languageName)
        {
            LanguageMaster languageMaster = new LanguageMaster();
            languageMaster.LanguageID = languageID;
            languageMaster.LanguageName = languageName;
            return languageMaster;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                if (_LanguageID != value)
                {
                    OnLanguageIDChanging(value);
                    ReportPropertyChanging("LanguageID");
                    _LanguageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LanguageID");
                    OnLanguageIDChanged();
                }
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LanguageName
        {
            get
            {
                return _LanguageName;
            }
            set
            {
                OnLanguageNameChanging(value);
                ReportPropertyChanging("LanguageName");
                _LanguageName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LanguageName");
                OnLanguageNameChanged();
            }
        }
        private global::System.String _LanguageName;
        partial void OnLanguageNameChanging(global::System.String value);
        partial void OnLanguageNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_LanguageAddress_LanguageMaster", "LanguageAddress")]
        public EntityCollection<LanguageAddress> LanguageAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LanguageAddress>("AddressBookModel.FK_LanguageAddress_LanguageMaster", "LanguageAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LanguageAddress>("AddressBookModel.FK_LanguageAddress_LanguageMaster", "LanguageAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AddressBookModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="permissionID">Initial value of the PermissionID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        public static Permission CreatePermission(global::System.Int32 permissionID, global::System.Int32 roleID, global::System.Int32 personID)
        {
            Permission permission = new Permission();
            permission.PermissionID = permissionID;
            permission.RoleID = roleID;
            permission.PersonID = personID;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionID
        {
            get
            {
                return _PermissionID;
            }
            set
            {
                if (_PermissionID != value)
                {
                    OnPermissionIDChanging(value);
                    ReportPropertyChanging("PermissionID");
                    _PermissionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PermissionID");
                    OnPermissionIDChanged();
                }
            }
        }
        private global::System.Int32 _PermissionID;
        partial void OnPermissionIDChanging(global::System.Int32 value);
        partial void OnPermissionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_Permission_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AddressBookModel.FK_Permission_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AddressBookModel.FK_Permission_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AddressBookModel.FK_Permission_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("AddressBookModel.FK_Permission_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_Permission_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AddressBookModel.FK_Permission_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AddressBookModel.FK_Permission_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AddressBookModel.FK_Permission_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("AddressBookModel.FK_Permission_Role", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AddressBookModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Person CreatePerson(global::System.Int32 personID, global::System.String userName, global::System.String password, global::System.String firstName, global::System.String lastName)
        {
            Person person = new Person();
            person.PersonID = personID;
            person.UserName = userName;
            person.Password = password;
            person.FirstName = firstName;
            person.LastName = lastName;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonAddressID
        {
            get
            {
                return _PersonAddressID;
            }
            set
            {
                OnPersonAddressIDChanging(value);
                ReportPropertyChanging("PersonAddressID");
                _PersonAddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonAddressID");
                OnPersonAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonAddressID;
        partial void OnPersonAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnPersonAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_Permission_Person", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("AddressBookModel.FK_Permission_Person", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("AddressBookModel.FK_Permission_Person", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_Person_PersonAddress", "PersonAddress")]
        public PersonAddress PersonAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddress>("AddressBookModel.FK_Person_PersonAddress", "PersonAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddress>("AddressBookModel.FK_Person_PersonAddress", "PersonAddress").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PersonAddress> PersonAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PersonAddress>("AddressBookModel.FK_Person_PersonAddress", "PersonAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PersonAddress>("AddressBookModel.FK_Person_PersonAddress", "PersonAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AddressBookModel", Name="PersonAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonAddress object.
        /// </summary>
        /// <param name="personAddressID">Initial value of the PersonAddressID property.</param>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        public static PersonAddress CreatePersonAddress(global::System.Int32 personAddressID, global::System.Int32 stateID, global::System.String gender)
        {
            PersonAddress personAddress = new PersonAddress();
            personAddress.PersonAddressID = personAddressID;
            personAddress.StateID = stateID;
            personAddress.Gender = gender;
            return personAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonAddressID
        {
            get
            {
                return _PersonAddressID;
            }
            set
            {
                if (_PersonAddressID != value)
                {
                    OnPersonAddressIDChanging(value);
                    ReportPropertyChanging("PersonAddressID");
                    _PersonAddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonAddressID");
                    OnPersonAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonAddressID;
        partial void OnPersonAddressIDChanging(global::System.Int32 value);
        partial void OnPersonAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private Nullable<global::System.Int64> _PhoneNumber;
        partial void OnPhoneNumberChanging(Nullable<global::System.Int64> value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompleteAddress
        {
            get
            {
                return _CompleteAddress;
            }
            set
            {
                OnCompleteAddressChanging(value);
                ReportPropertyChanging("CompleteAddress");
                _CompleteAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompleteAddress");
                OnCompleteAddressChanged();
            }
        }
        private global::System.String _CompleteAddress;
        partial void OnCompleteAddressChanging(global::System.String value);
        partial void OnCompleteAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PinCode
        {
            get
            {
                return _PinCode;
            }
            set
            {
                OnPinCodeChanging(value);
                ReportPropertyChanging("PinCode");
                _PinCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PinCode");
                OnPinCodeChanged();
            }
        }
        private global::System.String _PinCode;
        partial void OnPinCodeChanging(global::System.String value);
        partial void OnPinCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoName
        {
            get
            {
                return _PhotoName;
            }
            set
            {
                OnPhotoNameChanging(value);
                ReportPropertyChanging("PhotoName");
                _PhotoName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoName");
                OnPhotoNameChanged();
            }
        }
        private global::System.String _PhotoName;
        partial void OnPhotoNameChanging(global::System.String value);
        partial void OnPhotoNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_HobbyAddress_PersonAddress", "HobbyAddress")]
        public EntityCollection<HobbyAddress> HobbyAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HobbyAddress>("AddressBookModel.FK_HobbyAddress_PersonAddress", "HobbyAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HobbyAddress>("AddressBookModel.FK_HobbyAddress_PersonAddress", "HobbyAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_LanguageAddress_PersonAddress", "LanguageAddress")]
        public EntityCollection<LanguageAddress> LanguageAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LanguageAddress>("AddressBookModel.FK_LanguageAddress_PersonAddress", "LanguageAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LanguageAddress>("AddressBookModel.FK_LanguageAddress_PersonAddress", "LanguageAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_Person_PersonAddress", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("AddressBookModel.FK_Person_PersonAddress", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("AddressBookModel.FK_Person_PersonAddress", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_Address_StateMaster1", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("AddressBookModel.FK_Address_StateMaster1", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("AddressBookModel.FK_Address_StateMaster1", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("AddressBookModel.FK_Address_StateMaster1", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("AddressBookModel.FK_Address_StateMaster1", "StateMaster", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AddressBookModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.String roleName)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.RoleName = roleName;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_Permission_Role", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("AddressBookModel.FK_Permission_Role", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("AddressBookModel.FK_Permission_Role", "Permission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AddressBookModel", Name="StateMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StateMaster object.
        /// </summary>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="stateName">Initial value of the StateName property.</param>
        public static StateMaster CreateStateMaster(global::System.Int32 stateID, global::System.Int32 countryID, global::System.String stateName)
        {
            StateMaster stateMaster = new StateMaster();
            stateMaster.StateID = stateID;
            stateMaster.CountryID = countryID;
            stateMaster.StateName = stateName;
            return stateMaster;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                if (_StateID != value)
                {
                    OnStateIDChanging(value);
                    ReportPropertyChanging("StateID");
                    _StateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateID");
                    OnStateIDChanged();
                }
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_StateMaster_CountryMaster", "CountryMaster")]
        public CountryMaster CountryMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryMaster>("AddressBookModel.FK_StateMaster_CountryMaster", "CountryMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryMaster>("AddressBookModel.FK_StateMaster_CountryMaster", "CountryMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryMaster> CountryMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryMaster>("AddressBookModel.FK_StateMaster_CountryMaster", "CountryMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryMaster>("AddressBookModel.FK_StateMaster_CountryMaster", "CountryMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AddressBookModel", "FK_Address_StateMaster1", "PersonAddress")]
        public EntityCollection<PersonAddress> PersonAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonAddress>("AddressBookModel.FK_Address_StateMaster1", "PersonAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonAddress>("AddressBookModel.FK_Address_StateMaster1", "PersonAddress", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
